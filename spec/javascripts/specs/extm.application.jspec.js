// Generated by CoffeeScript 1.7.1
define(['marionette', 'src/extm.application'], function(Marionette, ExtmApplication) {
  return describe('Extended marionette application', function() {
    var App;
    App = {};
    beforeEach(function() {
      window.location.hash = '';
      return App = new ExtmApplication;
    });
    afterEach(function() {
      Backbone.history.stop();
      window.location.hash = '';
      return App = {};
    });
    describe('Application start', function() {
      describe('when an application is started without regions hash', function() {
        return it('must throw an error', function() {
          return expect(function() {
            return App.start();
          }).toThrow();
        });
      });
      return describe('when an application is started with regions hash', function() {
        beforeEach(function() {
          return App.start({
            regions: {
              someRegion: '#some-region'
            }
          });
        });
        return it('must have region available', function() {
          return expect(App.getRegion('someRegion') instanceof Marionette.Region).toBeTruthy();
        });
      });
    });
    describe('when getting the current route', function() {
      beforeEach(function() {});
      it('must return "some-hash" as the current route', function() {});
      return describe('when getting the initial route', function() {
        beforeEach(function() {
          return App.start({
            regions: '#some-region'
          });
        });
        return it('must return "some-hash" as the current route', function() {
          return expect(App.getCurrentRoute()).toBe('');
        });
      });
    });
    return describe('Application navigate', function() {
      return describe('when application navigates with trigger', function() {
        beforeEach(function() {
          return App.start({
            regions: '#some-region'
          });
        });
        return it('must change hash ', function() {
          App.navigate('somehash');
          return expect(App.getCurrentRoute()).toBe('somehash');
        });
      });
    });
  });
});
